# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-11-01 08:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('guifi', '0001_initial'),
        ('accounting', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TincClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vpn_address', models.CharField(max_length=200, verbose_name='vpn address')),
                ('private_key', models.TextField(blank=True, null=True, verbose_name='private key')),
                ('public_key', models.TextField(blank=True, null=True, verbose_name='public key')),
                ('upload', models.PositiveSmallIntegerField(default=400, help_text='speed in kbit/s', verbose_name='upload')),
                ('download', models.PositiveSmallIntegerField(default=4000, help_text='speed in kbit/s', verbose_name='download')),
            ],
            options={
                'verbose_name': 'Tinc client',
                'verbose_name_plural': 'Tinc clients',
            },
        ),
        migrations.CreateModel(
            name='TincGateway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('nickname', models.SlugField(help_text='name of the tinc daemon and the network interface', max_length=100, unique=True, verbose_name='nickname')),
                ('address', models.CharField(blank=True, help_text='IP address or hostname of the server. If blank, guifi address will be used.', max_length=200, null=True, verbose_name='address')),
                ('upload', models.PositiveSmallIntegerField(help_text='speed in kbit/s', verbose_name='upload')),
                ('download', models.PositiveSmallIntegerField(help_text='speed in kbit/s', verbose_name='download')),
                ('inet_zone', models.CharField(default='inet', help_text='zone for the external interface.', max_length=20, verbose_name='external zone')),
                ('inet_interface', models.CharField(help_text='external interface. For firewall policies.', max_length=20, verbose_name='external interface')),
                ('inet_address', models.CharField(help_text='external ip address. VPN traffic will go out from here.', max_length=200, verbose_name='external address')),
                ('vpn_address', models.CharField(max_length=200, verbose_name='vpn address')),
                ('subnet', models.CharField(max_length=200, verbose_name='subnet')),
                ('private_key', models.TextField(blank=True, null=True, verbose_name='private key')),
                ('public_key', models.TextField(blank=True, null=True, verbose_name='public key')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='guifi.Device', verbose_name='device')),
            ],
            options={
                'verbose_name': 'Tinc server',
                'verbose_name_plural': 'Tinc servers',
            },
        ),
        migrations.AddField(
            model_name='tincclient',
            name='gateway',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vpn.TincGateway', verbose_name='gateway'),
        ),
        migrations.AddField(
            model_name='tincclient',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.Member', verbose_name='member'),
        ),
    ]
